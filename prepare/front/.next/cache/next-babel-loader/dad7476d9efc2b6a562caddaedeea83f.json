{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signUp');\n}\n\nfunction signUp() {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/workspace/react-sns/prepare/front/Sagas/user.js"],"names":["logIn","logOut","signUp","watchLogIn","watchLogOut","watchSignUp","userSaga","all","delay","fork","put","takeLatest","axios","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","logInAPI","data","post","action","type","error","response","logOutAPI","signUpAPI","SIGN_UP_FAILURE"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    //const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    //const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI() {\r\n  return axios.post('/api/signUp');\r\n}\r\n\r\nfunction* signUp() {\r\n  try {\r\n    //const result = yield call(signUpAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}