{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortId from 'shortid';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'DI'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20140407_217%2Fhyesungk813_1396839637058QcuWS_JPEG%2Ftumblr_n3mni89HWp1qczzxzo1_500.jpg&type=sc960_832'\n    }, {\n      src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20140407_217%2Fhyesungk813_1396839637058QcuWS_JPEG%2Ftumblr_n3mni89HWp1qczzxzo1_500.jpg&type=sc960_832'\n    }, {\n      src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20140407_217%2Fhyesungk813_1396839637058QcuWS_JPEG%2Ftumblr_n3mni89HWp1qczzxzo1_500.jpg&type=sc960_832'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '1234'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '3456'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'DI'\n  },\n  Images: [],\n  Conmment: []\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n\n      const post = _objectSpread({}, state.mainPosts[postIndex]);\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/User/Desktop/workspace/react-sns/prepare/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","generate","Conmment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: 'DI'\r\n      },\r\n      content: '첫 번째 게시글 #해시태그 #익스프레스',\r\n      Images: [\r\n        {\r\n          src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20140407_217%2Fhyesungk813_1396839637058QcuWS_JPEG%2Ftumblr_n3mni89HWp1qczzxzo1_500.jpg&type=sc960_832'\r\n        },\r\n        {\r\n          src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20140407_217%2Fhyesungk813_1396839637058QcuWS_JPEG%2Ftumblr_n3mni89HWp1qczzxzo1_500.jpg&type=sc960_832'\r\n        },\r\n        {\r\n          src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20140407_217%2Fhyesungk813_1396839637058QcuWS_JPEG%2Ftumblr_n3mni89HWp1qczzxzo1_500.jpg&type=sc960_832'\r\n        }\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            nickname: 'nero'\r\n          },\r\n          content: '1234'\r\n        },\r\n        {\r\n          User: {\r\n            nickname: 'hero'\r\n          },\r\n          content: '3456'\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'DI'\r\n  },\r\n  Images: [],\r\n  Conmment: []\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: null\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addPostLoading: false,\r\n        addPostError: action.error\r\n      };\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: true,\r\n        addCommentDone: false,\r\n        addCommentError: null\r\n      };\r\n    case ADD_COMMENT_SUCCESS:\r\n      const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n      const post = { ...state.mainPosts[postIndex] };\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentDone: true\r\n      };\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentError: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}