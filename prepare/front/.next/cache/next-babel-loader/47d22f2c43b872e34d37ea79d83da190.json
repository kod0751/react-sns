{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: 'DI',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followers: [{\n    nickname: 'DI'\n  }, {\n    nickname: '쉼터'\n  }, {\n    nickname: 'niduuu'\n  }],\n  Followings: [{\n    nickname: 'DI'\n  }, {\n    nickname: '쉼터'\n  }, {\n    nickname: 'niduuu'\n  }]\n});\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case FOLLOW_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.logInLoading = false;\n        draft.me = dummyUser(action.data);\n        draft.logInDone = true;\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.logInLoading = false;\n        draft.me = dummyUser(action.data);\n        draft.logInDone = true;\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.me = dummyUser(action.data);\n        draft.logInDone = true;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts]\n      //   }\n      // };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data)\n      //   }\n      // };\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/User/Desktop/workspace/react-sns/prepare/front/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followers","Followings","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  logInLoading: false,\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false,\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false,\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {}\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: 'DI',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followers: [{ nickname: 'DI' }, { nickname: '쉼터' }, { nickname: 'niduuu' }],\r\n  Followings: [{ nickname: 'DI' }, { nickname: '쉼터' }, { nickname: 'niduuu' }]\r\n});\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case FOLLOW_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      case FOLLOW_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.me = dummyUser(action.data);\r\n        draft.logInDone = true;\r\n        break;\r\n      case FOLLOW_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case UNFOLLOW_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      case UNFOLLOW_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.me = dummyUser(action.data);\r\n        draft.logInDone = true;\r\n        break;\r\n      case UNFOLLOW_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.me = dummyUser(action.data);\r\n        draft.logInDone = true;\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true;\r\n        draft.changeNicknameDone = false;\r\n        draft.changeNicknameError = null;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: [{ id: action.data }, ...state.me.Posts]\r\n      //   }\r\n      // };\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data)\r\n      //   }\r\n      // };\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}